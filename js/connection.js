// Generated by CoffeeScript 2.2.0
var Connection, debug, extend, net, set, uhoh;

({extend, set, uhoh} = require("./utils"));

debug = require("debug");

net = require("net");

Connection = function() {
  set(this, "_state", 0);
  set(this, "_socket", null);
  return this;
};

extend(Connection, {
  write: function(data) {
    this._socket.write(data);
  },
  disconnect: function() {
    if (this._socket) {
      this._socket.end();
    }
  },
  connect: function(opts, parse, emit) {
    this._state = 1;
    return new Promise((resolve, reject) => {
      var socket;
      socket = net.createConnection({
        host: opts.host,
        port: opts.port
      });
      socket.once("connect", () => {
        this._state = 2;
        // Wait for greeting.
        return socket.once("data", function(data) {
          socket.on("data", parse);
          emit("connect", data);
          return resolve();
        });
      }).once("close", () => {
        var connected;
        connected = this._state > 1;
        this._state = 0;
        this._socket = null;
        return emit("close", connected);
      }).once("error", function(err) {
        emit("error", err);
        return reject(err);
      });
      // Disable buffering on write.
      socket.setNoDelay(true);
      // Ping every 25 seconds.
      socket.setKeepAlive(true, 25000);
      this._socket = socket;
    });
  }
});

module.exports = Connection;
