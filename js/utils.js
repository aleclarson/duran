// Generated by CoffeeScript 2.2.0
var utils;

utils = exports;

utils.alias = function(ctr, aliases) {
  var alias, name;
  for (name in aliases) {
    alias = aliases[name];
    ctr.prototype[alias] = ctr.prototype[name];
  }
};

utils.extend = function(ctr, proto) {
  var key, value;
  for (key in proto) {
    value = proto[key];
    ctr.prototype[key] = value;
  }
};

utils.has = Function.call.bind(Object.hasOwnProperty);

utils.mapFn = function(fn) {
  if (fn) {
    return function(vals) {
      return vals.map(fn);
    };
  }
};

utils.set = function(obj, key, value) {
  return Object.defineProperty(obj, key, {
    value,
    writable: true
  });
};

utils.uhoh = function(msg, code) {
  var e;
  e = Error(msg);
  if (code) {
    e.code = code;
  }
  Error.captureStackTrace(e, utils.uhoh);
  throw e;
};

utils.unimpl = function(key) {
  return function() {
    throw Error(`'${key}' is not implemented yet`);
  };
};

utils.untuple = function(tuple) {
  if (tuple.length > 1) {
    return tuple;
  } else {
    return tuple[0];
  }
};

utils.wait = function(ms, fn) {
  return setTimeout(fn, ms);
};

utils.withFormat = function(format) {
  if (format) {
    return function(tuple) {
      var i, j, len, res, val;
      res = {};
      for (i = j = 0, len = tuple.length; j < len; i = ++j) {
        val = tuple[i];
        res[format[i].name] = val;
      }
      return res;
    };
  }
};
